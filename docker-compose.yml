# Docker Compose 
version: '3.7'

# Define services
services:
  # App backend service
  achat_back:
    # Configuration for building the docker image for the backend service
    image: imageName
    ports:
      - "8089:8089" # Forward the exposed port 8089 on the container to port 8089 on the host machine
    container_name: app_back_cont
    restart: always
    depends_on:
      - db # This service depends on mysql. Start that first.
    environment:
      # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/achatdb?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: zaynab
      SPRING_DATASOURCE_PASSWORD: zaynab@12ere
    networks:
      # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

  # Frontend Service 
  achat_front:
    image: imageName
    container_name: app_front_cont
    ports:
      - "8084:80" # Map the exposed port 80 on the container to port 8081 on the host machine
    restart: always
    depends_on:
      - achat_back
    networks:
      - frontend

  # Database Service (Mysql)
  db:
    image: mysql:latest
    container_name: app_bd_cont
    ports:
      - "3309:3306"
    volumes:
      - db_data:/var/lib/mysql #Host volume-name ::: path inside of the mysql container.
    restart: always
    environment:
      MYSQL_DATABASE: achatdb
      MYSQL_USER: zaynab
      MYSQL_PASSWORD: zaynab@12ere
      MYSQL_ROOT_PASSWORD: root
    networks:
      - backend

  # Database Service (Mysql)
  phpmyadmin:
    image: phpmyadmin
    container_name: app_pmadmin_cont
    restart: always
    depends_on:
      - db
    ports:
      - 8086:80
    environment:
      - PMA_ARBITRARY=1
    networks:
      - backend

# Volumes to be created to persist data  
volumes:
  db_data:

    # Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:


